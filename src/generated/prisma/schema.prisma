generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model events {
  id            Int                     @id @default(autoincrement())
  title         String                  @db.VarChar(255)
  description   String?
  event_date    DateTime                @db.Timestamp(6)
  location      Unsupported("geometry")
  created_at    DateTime?               @default(now()) @db.Timestamp(6)
  organizer_id  Int
  category      String? // Для существующего столбца
  image_url     String? // Для нового столбца
  users         users                   @relation(fields: [organizer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  registrations registrations[]

  @@index([location], type: Gist)
}

model registrations {
  id            Int       @id @default(autoincrement())
  user_id       Int
  event_id      Int
  registered_at DateTime? @default(now()) @db.Timestamp(6)
  events        events    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, event_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model users {
  id            Int             @id @default(autoincrement())
  username      String          @unique @db.VarChar(50)
  email         String          @unique @db.VarChar(255)
  password_hash String          @db.VarChar(255)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  events        events[]
  registrations registrations[]
}
